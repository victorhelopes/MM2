[{"C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\reportWebVitals.ts":"1","C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\services\\randomVar.js":"2","C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\modules\\main\\MainPage.js":"3","C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\services\\statistics.js":"4","C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\App.js":"5"},{"size":425,"mtime":1607040010000,"results":"6","hashOfConfig":"7"},{"size":1324,"mtime":1607040010000,"results":"8","hashOfConfig":"7"},{"size":18518,"mtime":1608249921074,"results":"9","hashOfConfig":"7"},{"size":851,"mtime":1608211846983,"results":"10","hashOfConfig":"7"},{"size":138,"mtime":1607040010000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vcahyw",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\reportWebVitals.ts",[],"C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\services\\randomVar.js",[],"C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\modules\\main\\MainPage.js",["23"],"import React, { useState } from 'react';\nimport styles from './MainPage.module.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Chart from 'react-apexcharts';\nimport { barOptions } from './chart-options';\nimport { exponencialRAND, normalRAND } from '../../services/randomVar';\nimport { tmFila, probEsperar, probOperadorLivre, tmSvc, tmSistema } from '../../services/statistics';\n\nexport default function MainPage() {\n    const [tempoSim, setTempo] = useState(0);\n\n    const [tipoTec, setTipoTEC] = useState('');\n    const [tec, setTEC] = useState(0);\n    const [mediaTEC, setMediaTEC] = useState(0);\n    const [varianciaTEC, setVarianciaTEC] = useState(0);\n\n    const [tipoTs, setTipoTS] = useState('');\n    const [ts, setTS] = useState(0);\n    const [mediaTS, setMediaTS] = useState(0);\n    const [varianciaTS, setVarianciaTS] = useState(0);\n\n    const [temposNafila, setTemposNaFila] = useState([]);\n    const [temposDeServico, setTemposDeServico] = useState([]);\n    const [tempoDeOperadores1Livre, setOperadores1Livre] = useState([]);\n    const [tempoDeOperadores2Livre, setOperadores2Livre] = useState([]);\n    const [tempoNoSistema, setTempoNoSistema] = useState([]);\n    const [numeroExperimentos, setNumeroExperimentos] = useState(0);\n\n    const [tmDeFila, setTmDeFila] = useState(0);\n    const [probDeEsperar, setProbDeEsperar] = useState(0);\n    const [probDeOperadorLivre1, setProbDeOperadorLivre1] = useState(0);\n    const [probDeOperadorLivre2, setProbDeOperadorLivre2] = useState(0);\n    const [tmDeServico, setTmDeServico] = useState(0);\n    const [tmNoSistema, setTmNoSistema] = useState(0);\n\n    const [dados, setDados] = useState([]);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        let tabela = []\n        let tc = 0.0, tf = 0.0, tis = 0.0, tfs = 0.0, tcs = 0.0, tl1 = 0.0, tl2 = 0.0, tc_antes = 0.0, tfs1_antes = 0.0, tfs2_antes = 0.0\n        let experimento = 1\n        let temposimulacao = parseFloat(tempoSim)\n        let tecint = parseFloat(tec)\n        let tsint = parseFloat(ts)\n        let tmfila = []\n        let tmservico = []\n        let tempoOperadorLivre1 = []\n        let tempoOperadorLivre2 = []\n        let tmsistema = []\n        let i = 0\n\n        while( i <= parseFloat(temposimulacao) ){\n            if ( tipoTec === \"exponencial\" ) {\n                tecint = parseFloat(exponencialRAND(1 / mediaTEC))\n            } else if ( tipoTec === \"normal\" ) {\n                tecint = parseFloat(normalRAND(mediaTEC, varianciaTEC))\n            }\n            if ( tipoTs === \"exponencial\" ) {\n                tsint = parseFloat(exponencialRAND(1 / mediaTS))\n            } else if ( tipoTs === \"normal\" ) {\n                tsint = parseFloat(normalRAND(mediaTS, varianciaTS))\n            } \n///tc = tempo de entrada do cliente\n\n            if ( i === 0 ) {\n                tc = tecint\n                tf = 0.0\n                tis = tecint\n                tfs = parseFloat(tecint)+parseFloat(tsint)\n                tcs = parseFloat(tfs)-parseFloat(tis)\n                tl1 = tecint\n                tl2 = tecint \n                tc_antes = parseFloat(tc)\n            } else {\n                tc = parseFloat(tc_antes)+parseFloat(tecint)\n\n                if ( tfs1_antes < tc ) {\n                    tfs1_antes = parseFloat(tfs)\n                    tc_antes = parseFloat(tc)\n                    tmfila.push(parseFloat(tf).toFixed(2))\n                    tmservico.push(parseFloat(tsint).toFixed(2))\n                    tempoOperadorLivre1.push(parseFloat(tl1).toFixed(2))\n                    tempoOperadorLivre2.push(parseFloat(tl2).toFixed(2))\n                    tmsistema.push(parseFloat(tcs).toFixed(2))\n                    tl1 = parseFloat(tc)-parseFloat(tfs1_antes)\n                    tl2 = parseFloat(tc)-parseFloat(tfs2_antes)\n                    if(tl2 < 0){tl2 = 0.0}\n                    tf = 0.0\n                } else {\n                    if ( tfs2_antes < tc ) {\n                        tfs2_antes = parseFloat(tfs)\n                        tc_antes = parseFloat(tc)\n                        tmfila.push(parseFloat(tf).toFixed(2))\n                        tmservico.push(parseFloat(tsint).toFixed(2))\n                        tempoOperadorLivre1.push(parseFloat(tl1).toFixed(2))\n                        tempoOperadorLivre2.push(parseFloat(tl2).toFixed(2))\n                        tmsistema.push(parseFloat(tcs).toFixed(2))\n                        tl1 = parseFloat(tc)-parseFloat(tfs1_antes)\n                        tl2 = parseFloat(tc)-parseFloat(tfs2_antes)\n                        if(tl1 < 0){tl1 = 0.0}\n                        tf = 0.0\n                    } else {\n                        if( tfs1_antes < tfs2_antes){\n                            tf = parseFloat(tfs1_antes)-parseFloat(tc)\n                            tl1 = parseFloat(tc)-parseFloat(tfs1_antes)\n                        } else{\n                            tf = parseFloat(tfs2_antes)-parseFloat(tc)\n                            tl2 = parseFloat(tc)-parseFloat(tfs2_antes)\n                        }\n                        \n                    }\n                }\n\n                tis = parseFloat(tc)+parseFloat(tf)\n                tfs = parseFloat(tis)+parseFloat(tsint)\n                \n                tcs = parseFloat(tfs)-parseFloat(tis)+parseFloat(tf)\n            }\n\n            tecint = parseFloat(tecint).toFixed(2)\n            tc = parseFloat(tc).toFixed(2)\n            tf = parseFloat(tf).toFixed(2)\n            tsint = parseFloat(tsint).toFixed(2)\n            tis = parseFloat(tis).toFixed(2)\n            tfs = parseFloat(tfs).toFixed(2)\n            tcs = parseFloat(tcs).toFixed(2)\n            tl1 = parseFloat(tl1).toFixed(2)\n            tl2 = parseFloat(tl2).toFixed(2)\n\n            console.log(typeof tecint, typeof tc, typeof tf, typeof tis, typeof tfs, typeof tcs, typeof tl1, typeof tl2)\n\n            tabela.push({id: experimento, tecint, tc, tf, tsint, tis, tfs, tcs, tl1, tl2})\n\n            i = parseFloat(i) + parseFloat(tcs)\n            experimento = parseInt(experimento) + 1\n\n        }\n\n        setDados(tabela)\n        setTemposNaFila(tmfila)\n        setOperadores1Livre(tempoOperadorLivre1)\n        setOperadores2Livre(tempoOperadorLivre2)\n        setTempoNoSistema(tmsistema)\n        setTemposDeServico(tmservico)\n        setNumeroExperimentos(parseInt(experimento))\n\n        setTmDeFila(tmFila(tmfila));\n        setProbDeEsperar(probEsperar(tmfila));\n        setProbDeOperadorLivre1(probOperadorLivre(tempoOperadorLivre1, tempoSim));\n        setProbDeOperadorLivre2(probOperadorLivre(tempoOperadorLivre2, tempoSim));\n        setTmDeServico(tmSvc(tmservico));\n        setTmNoSistema(tmSistema(tmsistema));\n    }\n\n    function handleChangeTipoTEC(value) {\n        setTipoTEC(value);\n    }\n\n    function handleChangeTipoTS(value) {\n        setTipoTS(value);\n    }\n\n    function handleChangeTEC(value) {\n        setTEC(parseFloat(value));\n    }\n\n    function handleChangeMediaTEC(value) {\n        setMediaTEC(parseFloat(value));\n    }\n\n    function handleChangeVarianciaTEC(value) {\n        setVarianciaTEC(parseFloat(value));\n    }\n\n    function handleChangeTS(value) {\n        setTS(parseFloat(value));\n    }\n\n    function handleChangeMediaTS(value) {\n        setMediaTS(parseFloat(value));\n    }\n\n    function handleChangeVarianciaTS(value) {\n        setVarianciaTS(parseFloat(value));\n    }\n    \n    return (\n        <div className={styles.gridContainer}>\n            <div className={styles.header}>Simulador MM1</div>\n\n            <form onSubmit={handleSubmit} className={styles.params}>\n                <div className={styles.paramsheader}>\n                    <label className={styles.labelSimulacao}>Tempo de Simulação</label>\n                    <input \n                    placeholder=\"em minutos\"\n                    type=\"number\"\n                    className={styles.tempoSimulacao} \n                    id=\"tempoSim\" value={tempoSim} \n                    onChange={e => setTempo(e.target.value)} \n                    />\n                </div>\n\n                <div className={styles.params1}>\n    \n\n                    <div>\n                        <label>Tempo entre Chegadas</label>\n                        <select className={styles.colInput} onChange={e => handleChangeTipoTEC(e.target.value)}>\n                            <option id=\"tipoTec\" name=\"tipoTec\" defaultValue=\"\">Selecione...</option>\n                            <option id=\"tipoTec\" name=\"tipoTec\" value=\"deterministico\">Determinístico</option>\n                            <option id=\"tipoTec\" name=\"tipoTec\" value=\"normal\">Aleatório Normal</option>\n                            <option id=\"tipoTec\" name=\"tipoTec\" value=\"exponencial\">Aleatório Exponencial</option>\n                        </select>\n                    </div>\n\n                    {tipoTec === \"deterministico\" &&\n                        <div>\n                            <label>Tempo entre as chegadas</label>\n                            <input \n                            className={styles.colInput}\n                            type=\"number\"\n                            min=\"1\"\n                            max=\"999\"\n                            placeholder=\"(tempo em minutos)\" \n                            onChange={e => handleChangeTEC(e.target.value)}\n                            />\n                        </div>\n                    }\n                    {tipoTec === \"exponencial\" &&\n                        <div>\n                            <label>Média</label>\n                            <input\n                            className={styles.colInput}\n                            type=\"number\"\n                            step=\"0.01\"\n                            placeholder=\"(em minutos)\" \n                            onChange={e => handleChangeMediaTEC(e.target.value)}/>\n                        </div>\n                    }\n                    {tipoTec === \"normal\" &&\n                    <div>\n                        <div>\n                            <label>Média</label>\n                            <input\n                            className={styles.colInput}\n                            type=\"number\"\n                            step=\"0.01\"\n                            id=\"mediaexp\"\n                            placeholder=\"(em minutos)\" \n                            onChange={e => handleChangeMediaTEC(e.target.value)}/>\n                        </div>\n\n                        <div>\n                            <label>Variância</label>\n                            <input\n                            className={styles.colInput}\n                            type=\"number\"\n                            step=\"0.01\"\n                            id=\"stdexp\"\n                            placeholder=\"(em minutos)\" \n                            onChange={e => handleChangeVarianciaTEC(e.target.value)}/>\n                        </div>\n                    </div>\n                    }\n                </div>\n\n                <div className={styles.params2}>\n                    <div>\n                        <label>Tempo de Serviço</label>\n                        <select className={styles.colInput} onChange={e => handleChangeTipoTS(e.target.value)}>\n                            <option id=\"tipoTs\" name=\"tipoTs\" defaultValue=\"\">Selecione...</option>\n                            <option id=\"tipoTs\" name=\"tipoTs\" value=\"deterministico\">Determinístico</option>\n                            <option id=\"tipoTs\" name=\"tipoTs\" value=\"normal\">Normal</option>\n                            <option id=\"tipoTs\" name=\"tipoTs\" value=\"exponencial\">Exponencial</option>\n                        </select>\n                    </div>\n\n                    {tipoTs === \"deterministico\" &&\n                        <div>\n                            <label>Tempo de Serviço</label>\n                            <input \n                            className={styles.colInput}\n                            type=\"number\"\n                            min=\"1\"\n                            max=\"999\"\n                            placeholder=\"(tempo em minutos)\" \n                            onChange={e => handleChangeTS(e.target.value)}/>\n                        </div>\n                    }\n                    {tipoTs === \"exponencial\" &&\n                        <div>\n                            <label>Média</label>\n                            <input\n                            className={styles.colInput}\n                            type=\"number\"\n                            placeholder=\"(em minutos)\" \n                            onChange={e => handleChangeMediaTS(e.target.value)}/>\n                        </div>\n                    }\n                    {tipoTs === \"normal\" &&\n                    <div>\n                        <div>\n                            <label>Média</label>\n                            <input\n                            className={styles.colInput}\n                            type=\"number\"\n                            id=\"mediaexp\"\n                            placeholder=\"(em minutos)\" \n                            onChange={e => handleChangeMediaTS(e.target.value)}/>\n                        </div>\n\n                        <div>\n                            <label>Variância</label>\n                            <input\n                            className={styles.colInput}\n                            type=\"number\"\n                            step=\"0.01\"\n                            id=\"stdexp\"\n                            placeholder=\"(em minutos)\"\n                            onChange={e => handleChangeVarianciaTS(e.target.value)} />\n                        </div>\n                    </div>\n                    }\n                </div>\n\n                <div className={styles.paramsSubmit}>\n                    <input type=\"submit\" value=\"Ir\" />\n                </div>\n            </form>\n\n            <div className={styles.statistics}>\n                <div className={styles.charts}>\n                    <div className={styles.chart1}>\n                        <div className={styles.chartLabels}>\n                            Tempo do Operador Livre (experimentos x minutos)\n                        </div>\n                        <Chart \n                            options={barOptions} \n                            type=\"bar\"\n                            width=\"100%\"\n                            height=\"400\"\n                            series={[{ data: tempoDeOperadores1Livre}, { data : tempoDeOperadores2Livre}]}\n                        />\n\n                    </div>\n                    <div className={styles.chart2}>\n                        <div className={styles.chartLabels}>\n                            Tempo de Serviço (experimentos x minutos)\n                        </div>\n                        <Chart \n                            options={barOptions} \n                            type=\"bar\"\n                            width=\"100%\"\n                            height=\"400\"\n                            series={[{ data: temposDeServico  }]}\n\n                        />\n                    </div>\n                    <div className={styles.chart3}>\n                        <div className={styles.chartLabels}>\n                            Tempo na Fila (experimentos x minutos)\n                        </div>\n                        <Chart \n                            options={barOptions} \n                            type=\"bar\"\n                            width=\"100%\"\n                            height=\"400\"\n                            series={[{ data: temposNafila  }]}\n                        />\n                    </div>\n\n                    <div className={styles.chart4}>\n                        <div className={styles.chartLabels}>\n                            Tempo do Cliente no Sistema (experimentos x minutos)\n                        </div>\n                        <Chart \n                            options={barOptions} \n                            type=\"bar\"\n                            width=\"100%\"\n                            height=\"400\"\n                            series={[{ data: tempoNoSistema  }]}\n                        />\n                    </div>\n                    \n                </div>\n                <div className={styles.tableContainer}>\n                    <div className={styles.stats}>\n                        <div>Tempo médio de espera na fila = {tmDeFila} minutos</div>\n                        <div>Tempo médio de serviço = {tmDeServico} minutos</div>\n                        <div>Tempo médio de cada experimento no sistema = {tmNoSistema} minutos</div>\n                        <div>Probabilidade de esperar na fila = {probDeEsperar}</div>\n                        <div>Probabilidade do operador 1 estar livre = {probDeOperadorLivre1}</div>\n                        <div>Probabilidade do operador 2 estar livre = {probDeOperadorLivre2}</div>\n                    </div>\n                    <div className={styles.table}>\n                        <div className={styles.tableContainerGrid}>\n                            <DataGrid \n                            rows={dados} \n                            columns={[\n                                { field: 'id', headerName: 'Experimento', width: 120 },\n                                { field: 'tecint', headerName: 'T entre chegadas', width: 150 },\n                                { field: 'tc', headerName: 'T chegada no relogio', width: 150 },\n                                { field: 'tf', headerName: 'T de fila', width: 100 },\n                                { field: 'tsint', headerName: 'T de serviço', width: 110 },\n                                { field: 'tis', headerName: 'T inicial do serviço no relogio', width: 170 },\n                                { field: 'tfs', headerName: 'T final do serviço no relogio', width: 170 },\n                                { field: 'tcs', headerName: 'T do cliente no sistema', width: 160 },\n                                { field: 'tl1', headerName: 'T livre do operador 1', width: 150 },\n                                { field: 'tl2', headerName: 'T livre do operador 2', width: 150 },\n                            ]}\n                            headerHeight={100}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div className={styles.footer}>\n                Desenvolvido por <a href=\"https://github.com/lorenaelias/\"> Lorena </a> e Victor Hugo\n            </div>\n        \n        </div>\n    );\n}","C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\services\\statistics.js",[],"C:\\Users\\victo\\OneDrive\\Área de Trabalho\\Semestre Remoto\\AARE-2\\M&S\\trabalhos\\simuladorMM1-master\\src\\App.js",[],{"ruleId":"24","severity":1,"message":"25","line":27,"column":12,"nodeType":"26","messageId":"27","endLine":27,"endColumn":30},"no-unused-vars","'numeroExperimentos' is assigned a value but never used.","Identifier","unusedVar"]